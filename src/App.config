<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <appSettings>
    <!-- # VSS\\Win32 directory which contains ssapi.dll-->
    <add key="VSSWIN32" value="" />
    <!-- #VSS repository directory (contains srcsafe.ini)-->
    <add key="VSSDIR" value="" />
    <!-- #VSS project to start at (ie $/Product)-->
    <add key="VSSPROJ" value="$/" />
    <!-- #User to use for VSS commands, use blank for none-->
    <add key="VSSUSER" value="admin" />
    <!-- #password to use for VSS commands, blank is OK-->
    <add key="VSSPASSWORD" value="admin" />
    <!-- #User to use for SVN commands, use blank for none-->
    <add key="SVNUSER" value="" />
    <!-- #password to use for SVN commands, blank is OK-->
    <add key="SVNPASSWORD" value="" />
    <!-- #URL to use for the root of the check in-->
    <add key="SVNURL" value="http://svn-repo/svn/sandbox/" />
    <!-- #SVN project to start at (ie Product)-->
    <add key="SVNPROJ" value="" />
    <!-- #SVN tag path to use (relative to SVNURL)-->
    <add key="SVNTAG" value="" />
    <!-- #SVN branch path to use (relative to SVNURL)-->
    <add key="SVNBRANCH" value="" />
    <!-- #SVN Repository directory (ends in [RepositoryName]\)leave blank for no user/date adjustments -->
    <!--<add key="SVNREVPROPSPATH" value="C:\VisualSVN\Repositories\sandbox\" />-->
    <add key="SVNREVPROPSPATH" value="" />
    <!-- #Directory under which files and directories will be created as work progresses-->
    <add key="WORKDIR" value="c:\Temp\VssMigrate" />
    <!-- Boolean setting for determining whether or not to actually perform the import
			When set to false, the program will only show what files and/or revisions will be generated
			When set to true, the program will perform the migration
	  -->
    <add key="PerformImport" value="True" />
    <!--
		The window of time (in seconds) for multiple check-ins that may be considered a single revision
		The key for the merge / revision is the "time,author,comment."  Once all keys have been identified
		the merge will move all files from a later revision into an earlier revision thereby
		changing the time to the earlier revision.  This happens iteratively.
		
				Additional notes:
		End of lines and tabs are removed from comments and they are trimmed to determine the keys for merging / revisions
	  -->
    <add key="MergeRevisionWindow" value="5" />
    <!--
			Full Spec is passed into the regex's 
			e.g. inclusion => (\$/$)|(\$/Sub1(/Sub1A(/Sub1A2(/Sub1A2a)?)?)?$)|(\$/Sub1/Sub1A/Sub1A2/Sub1A2a.*)
			Only one or none of the exclusion/inclusion regex pairs may be set
			The regex's are case-insensitive
			Reminder: escape the $/ to \$/
		-->
    <add key="VssFolderExclusionRegex" value="" />
    <add key="VssFolderInclusionRegex" value="" />
    <!-- e.g. inclusion => (\$/Sub1/Sub1A/Sub1A2/Sub1A2a.*) -->
    <add key="VssFileExclusionRegex" value="" />
    <add key="VssFileInclusionRegex" value="" />
    <!-- If value set to "True", execution doesn't stop if an exception occurs 
         (e.g. because file couldn't be retrieved from VSS or RevProps couldn't be written)
    -->
    <add key="IgnoreExceptions" value="True" />
    <add key="ClientSettingsProvider.ServiceUri" value="" />
  </appSettings>
  <system.web>
    <membership defaultProvider="ClientAuthenticationMembershipProvider">
      <providers>
        <add name="ClientAuthenticationMembershipProvider" type="System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" />
      </providers>
    </membership>
    <roleManager defaultProvider="ClientRoleProvider" enabled="true">
      <providers>
        <add name="ClientRoleProvider" type="System.Web.ClientServices.Providers.ClientRoleProvider, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" cacheTimeout="86400" />
      </providers>
    </roleManager>
  </system.web>
</configuration>
